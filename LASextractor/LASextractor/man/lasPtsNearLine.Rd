% Generated by roxygen2 (4.0.1): do not edit by hand
\name{lasPtsNearLine}
\alias{lasPtsNearLine}
\title{Get lasPts which are within bufWidth of a line, and assign to each a distance along the line}
\usage{
lasPtsNearLine(lineFile, lasFiles, bufWidth, outdir = "LASPTS",
  zRange = NULL, lineDistanceRes = bufWidth/20)
}
\arguments{
\item{lineFile}{-- a line shapefile}

\item{lasFiles}{-- a vector of las file names to search for points}

\item{bufWidth}{-- return points within this distance of line shapefile}

\item{outdir}{-- directory where output shapefile is written. Set this to NA
to not write anything}

\item{zRange}{-- only take points in this elevation range. Ignored if NULL}

\item{lineDistanceRes}{-- To assign an along-line distance to the las
points, the line is sampled as points with max spacing = lineDistanceRes. All
the original line-vertices are retained. If this is too coarse, the
along-line-distance computation could be inaccurate.}
}
\value{
A SpatialPointsDataFrame with the chosen las points. The first 3
  columns will be xyz, and the final column will have the point distances along
  lineFile (as defined using 'assignLinearDistancesToPoints')
}
\description{
This is a convenienve routine combining getLasPointsNearRegion and
assignLinearDistancesToPoints,
for the case that we want lasPoints near a line.
It also writes outputs to a file if desired.
It returns a SpatialPointsDataFrame with the nearby points + information on
their distance along the line
}
\examples{
lasFile=paste0(system.file(package='LASextractor'), '/extdata/points.las')
lineShpFile=paste0(system.file(package='LASextractor'),'/extdata/Linear_extraction_line.shp')
lasSubset=lasPtsNearLine(lineShpFile, lasFile, bufWidth=10., outdir=tempdir())
l = ncol(lasSubset)
par(mfrow=c(1,1))
plot(lasSubset[,l][[1]],lasSubset[,1][[1]],
     xlab='Distance (m)',ylab='Elevation (m)',pch='.')
}

