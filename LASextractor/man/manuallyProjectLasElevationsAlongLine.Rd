% Generated by roxygen2 (4.0.1): do not edit by hand
\name{manuallyProjectLasElevationsAlongLine}
\alias{manuallyProjectLasElevationsAlongLine}
\title{Extract elevations along linear features using las-points + input line
shapefiles + manual methods}
\usage{
manuallyProjectLasElevationsAlongLine(lasFiles, extractionLineFile,
  extractionBufWidth, projectionLineFile, verticalThreshold, outdir,
  linePtMaxSpacing, zRange, lineDistanceRes = extractionBufWidth/20)
}
\arguments{
\item{lasFiles}{-- vector of names of lasFiles to search in}

\item{extractionLineFile}{-- Line shapefile. Initially extract all las
points within 'extractionBufWidth' of 'extractionLineFile'}

\item{extractionBufWidth}{-- Extract points within this distance of
extractionLineFile.}

\item{projectionLineFile}{-- Line shapefile. Project the extracted points
onto this line for export. Often the same as extractionLineFile.}

\item{verticalThreshold}{-- keep las points within this vertical distance of
the manually digitized distance-elevation line}

\item{outdir}{-- write outputs to this directory}

\item{linePtMaxSpacing}{-- Sample points with at most this spacing along
projection_linefile before output}

\item{zRange}{-- Only extract las points within this elevation range
(applies during the initial read of las files)}

\item{lineDistanceRes}{-- To assign an along-line distance to the las
points, the line is sampled as points with max spacing = lineDistanceRes. All
the original line-vertices are retained. If this is too coarse, the
along-line-distance computation could be inaccurate.}
}
\value{
Nothing, but produces various output shapefiles and a csv
}
\description{
Given a line (read from shapefile 'extractionLineFile') and a set of las
files (filenames in vector 'lasFiles'): \cr
1) Find all las points within 'extractionBufWidth' of the extraction line. \cr
2) Compute upstream distances of the extracted points along projectionLineFile. \cr
3) Manually select the lasPts we want to look at by digitising on a Distance-elevation plot,
   and accepting points within 'verticalThreshold' of our digitized line. \cr
4) Write these out to outdir. They can be used to check visually which points were selected \cr
5) Sample points along the line from 'projectionLineFile' (keeping all original points,
   but adding new ones so that the spacing < 'linePtMaxSpacing').
   and use the manually digitised distance-elevation curve to assign an elevation to each of these. \cr
6) Write it out as a csv. This can be used to define an xyz elevation profile.
}
\examples{
\dontrun{
    # Cant auto-test this routine since it relies on user input
    lasFile=paste0(system.file(package='LASextractor'), '/extdata/points.las')
    lineShpFile=paste0(system.file(package='LASextractor'),'/extdata/Linear_extraction_line.shp')
    # Manually select a subset, and write outputs as csv
    manuallyProjectLasElevationsAlongLine(
            lasFile, lineShpFile, extractionBufWidth=10.,
            projectionLineFile=lineShpFile, verticalThreshold=0.2,
            outdir=tempdir(), linePtMaxSpacing=3,zRange=NULL)
}
}

